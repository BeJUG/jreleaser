name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'zulu'
  GRAAL_VERSION: '22.3.0'
  GRAAL_JAVA_VERSION: '17'
  REPO_OWNER: 'jreleaser'
  REPO_NAME: 'jreleaser'
  GITHUB_BOT_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'

permissions:
  contents: read

jobs:
  precheck:
    name: Precheck
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
      JAVA_VERSION: ${{ env.JAVA_VERSION }}
      JAVA_DISTRO: ${{ env.JAVA_DISTRO }}
      GRAAL_VERSION: ${{ env.GRAAL_VERSION }}
      GRAAL_JAVA_VERSION: ${{ env.GRAAL_JAVA_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo ${{ github.event.inputs.version }} > VERSION
          git add VERSION
          sed -i -e "s/^\:project-version\:\ .*/:project-version: ${{ github.event.inputs.version }}/g" README.adoc
          git config --global user.email "${{ secrets.COMMIT_EMAIL }}"
          git config --global user.name "Andres Almiray"
          git commit -a -m "Releasing version ${{ github.event.inputs.version }}"
          git push origin main

  jlink:
    needs: [precheck]
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  jpackage:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  native-image:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      graal-version: ${{ needs.precheck.outputs.GRAAL_VERSION }}
      graal-java-version: ${{ needs.precheck.outputs.GRAAL_JAVA_VERSION }}
      java-version: ${{ needs.precheck.outputs.JAVA_VERSION }}
      java-distro: ${{ needs.precheck.outputs.JAVA_DISTRO }}
      project-version: ${{ needs.precheck.outputs.VERSION }}

  release:
    name: Release
    needs: [precheck, jlink, jpackage, native-image]
    runs-on: ubuntu-latest
    outputs:
      JAR_SIZE: ${{ steps.bach.outputs.JAR_SIZE }}
      JAR_CSUM: ${{ steps.bach.outputs.JAR_CSUM }}
      DOC_SIZE: ${{ steps.bach.outputs.DOC_SIZE }}
      HASHES: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v3
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Download jpackage
        uses: actions/download-artifact@v3
        with:
          name: jpackage
          path: out/jreleaser/assemble/jreleaser-installer/jpackage

      - name: Download native-image
        uses: actions/download-artifact@v3
        with:
          name: native-image
          path: out/jreleaser/assemble/jreleaser-native/native-image

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: ${{ runner.os }}-gradlew-

      - name: Deploy
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: |
          ./gradlew -Pprofile=release -PreproducibleBuild=true publishPlugins publish -S
          ./gradlew cleanupStagedRepository

      - name: Upload deploy artifacts
        uses: actions/upload-artifact@v3
        with:
          retention-days: 7
          name: deploy
          path: |
            build/repos/local/release/

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}
          JRELEASER_SDKMAN_CONSUMER_KEY: ${{ secrets.SDKMAN_CONSUMER_KEY }}
          JRELEASER_SDKMAN_CONSUMER_TOKEN: ${{ secrets.SDKMAN_CONSUMER_TOKEN }}
          JRELEASER_TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          JRELEASER_TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          JRELEASER_TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          JRELEASER_TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          JRELEASER_MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JRELEASER_NEXUS2_MAVEN_CENTRAL_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          JRELEASER_HTTP_NOTICEABLE_PASSWORD: ${{ secrets.NOTICEABLE_APIKEY }}
          NOTICEABLE_AUTHOR_EMAIL: ${{ secrets.NOTICEABLE_AUTHOR_EMAIL }}
          NOTICEABLE_PROJECTID: ${{ secrets.NOTICEABLE_PROJECTID }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Grab bach-info
        id: bach
        shell: bash
        run: |
          VERSION=${{ needs.precheck.outputs.VERSION }}
          JAR_SIZE=$(ls -l plugins/jreleaser-tool-provider/build/libs/jreleaser-tool-provider-$VERSION.jar | awk '{print $5}')
          JAR_CSUM=$(shasum -a 256 plugins/jreleaser-tool-provider/build/libs/jreleaser-tool-provider-$VERSION.jar | awk '{print $1}')
          DOC_SIZE=$(ls -l README.adoc | awk '{print $5}')
          echo "JAR_SIZE=$(echo $JAR_SIZE)" >> $GITHUB_OUTPUT
          echo "JAR_CSUM=$(echo $JAR_CSUM)" >> $GITHUB_OUTPUT
          echo "DOC_SIZE=$(echo $DOC_SIZE)" >> $GITHUB_OUTPUT

      - name: SLSA hashes
        shell: bash
        id: hash
        run: |
          echo "hashes=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [precheck, release]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.release.outputs.HASHES }}"
      upload-assets: false
      provenance-name: 'jreleaser-all-${{ needs.precheck.outputs.VERSION }}.intoto.jsonl'

  upload-provenance:
    name: Upload provenance
    needs: [precheck, provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Download upload-provenance script
        run: |
          curl -sL https://raw.githubusercontent.com/kordamp/jarviz/main/.github/scripts/upload-provenance.sh --output upload-provenance.sh
          chmod +x upload-provenance.sh

      - name: Download provenance
        uses: actions/download-artifact@v3
        with:
          name: 'jreleaser-all-${{ needs.precheck.outputs.VERSION }}.intoto.jsonl'

      - name: Commit
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          TAG: "v${{ needs.precheck.outputs.VERSION }}"
          PROVENANCE_FILE: 'jreleaser-all-${{ needs.precheck.outputs.VERSION }}.intoto.jsonl'
        run: sh upload-provenance.sh

  update-website:
    name: Update website
    needs: [precheck, release]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: jreleaser/jreleaser.github.io
          ref: 'main'
          fetch-depth: 0
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Download update-website script
        run: |
          curl -sL https://raw.githubusercontent.com/jreleaser/jreleaser/main/.github/scripts/update-website.sh --output update-website.sh
          chmod +x update-website.sh

      - name: Commit
        env:
          TAG: "v${{ needs.precheck.outputs.VERSION }}"
          VERSION: ${{ needs.precheck.outputs.VERSION }}
        run: sh update-website.sh

  update-bach-info:
    name: Update bach-info
    needs: [precheck, release]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: jreleaser/bach-info
          ref: 'main'
          fetch-depth: 0
          token: ${{ secrets.GIT_ACCESS_TOKEN }}

      - name: Download update-bach-info script
        run: |
          curl -sL https://raw.githubusercontent.com/jreleaser/jreleaser/main/.github/scripts/update-bach-info.sh --output update-bach-info.sh
          chmod +x update-bach-info.sh

      - name: Commit
        env:
          TAG: "v${{ needs.precheck.outputs.VERSION }}"
          VERSION: ${{ needs.precheck.outputs.VERSION }}
          JAR_SIZE: ${{ needs.release.outputs.JAR_SIZE }}
          JAR_CSUM: ${{ needs.release.outputs.JAR_CSUM }}
          DOC_SIZE: ${{ needs.release.outputs.DOC_SIZE }}
        run: sh update-bach-info.sh
