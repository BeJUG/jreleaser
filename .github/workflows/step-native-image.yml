name: NativeImage

on:
  workflow_call:
    inputs:
      project-version:
        required: true
        type: string
      java-version:
        default: '11'
        required: false
        type: string
      java-distro:
        default: 'zulu'
        required: false
        type: string
      graal-version:
        default: '22.3.1'
        required: false
        type: string
      graal-java-version:
        default: '17'
        required: false
        type: string
    secrets:
      gpg-passphrase:
        required: true
      oci-compartment-id:
        required: true

permissions:
  contents: read

jobs:
  native-image:
    name: 'NativeImage on ${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Decrypt secrets
        shell: bash
        run: sh .github/scripts/decrypt-secrets.sh
        env:
          GPG_PASSPHRASE: ${{ secrets.gpg-passphrase }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v3
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Setup Graal
        uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ inputs.graal-version }}
          java-version: ${{ inputs.graal-java-version }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distro }}
          cache: 'gradle'

      - name: Version
        if: endsWith(${{ inputs.project-version }}, '-SNAPSHOT') != true
        run: |
          echo ${{ inputs.project-version }} > VERSION

      - name: Build
        shell: bash
        run: ./gradlew :jreleaser:copyJdksFromCache :jreleaser:setupJdks
        env:
          JRELEASER_OCI_COMPARTMENTID: ${{ secrets.oci-compartment-id }}

      - name: Install upx
        run: brew install upx
        if: ${{ runner.os == 'macOS' }}

      - name: NativeImage
        uses: jreleaser/release-action@v1
        with:
          version: early-access
          arguments: assemble --assembler native-image --select-current-platform
        env:
          JRELEASER_PROJECT_VERSION: ${{ inputs.project-version }}

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-native-image-${{ runner.os }}
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Stop Gradle daemon
        shell: bash
        run: ./gradlew -stop

      - name: Upload native-image
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: native-image
          path: |
            out/jreleaser/assemble/jreleaser-native/native-image/*.zip
