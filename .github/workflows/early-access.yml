name: EarlyAccess

on:
  push:
    branches: [ main ]

permissions:
  actions: write
  id-token: write
  contents: write

jobs:
  precheck:
    name: Precheck
    if: github.repository == 'jreleaser/jreleaser' && startsWith(github.event.head_commit.message, 'Releasing version') != true
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

  jlink:
    needs: [precheck]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    uses: jreleaser/jreleaser/.github/workflows/step-jlink.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}
    secrets:
      gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      oci-compartment-id: ${{ secrets.JRELEASER_OCI_COMPARTMENTID }}

  jpackage:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-jpackage.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}

  native-image:
    needs: [precheck, jlink]
    uses: jreleaser/jreleaser/.github/workflows/step-native-image.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}

  release:
    name: Release
    needs: [precheck, jlink, jpackage, native-image]
    runs-on: ubuntu-latest
    outputs:
      HASHES: ${{ steps.hash.outputs.hashes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: plugins

      - name: Download jlink
        uses: actions/download-artifact@v3
        with:
          name: jlink
          path: out/jreleaser/assemble/jreleaser-standalone/jlink

      - name: Download jpackage
        uses: actions/download-artifact@v3
        with:
          name: jpackage
          path: out/jreleaser/assemble/jreleaser-installer/jpackage

      - name: Download native-image
        uses: actions/download-artifact@v3
        with:
          name: native-image
          path: out/jreleaser/assemble/jreleaser-native/native-image

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ vars.JAVA_VERSION }}
          distribution: ${{ vars.JAVA_DISTRO }}
          cache: 'gradle'

      - name: Release
        uses: jreleaser/release-action@v2
        with:
          version: early-access
          arguments: full-release
        env:
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_DOCKER_DEFAULT_PASSWORD: ${{ secrets.JRELEASER_DOCKER_PASSWORD }}

      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: SLSA hashes
        shell: bash
        id: hash
        run: |
          echo "hashes=$(cat out/jreleaser/checksums/checksums_sha256.txt | base64 -w0)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [precheck, release]
    uses: jreleaser/jreleaser/.github/workflows/step-provenance.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}
      project-tag: 'early-access'
      hashes: ${{ needs.release.outputs.HASHES }}
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}

  update-wiki:
    needs: [precheck, release]
    uses: jreleaser/jreleaser/.github/workflows/step-update-wiki.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}
      project-tag: 'early-access'
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}

  update-bach-info:
    needs: [precheck, release]
    uses: jreleaser/jreleaser/.github/workflows/step-update-bach-info.yml@main
    with:
      project-version: ${{ needs.precheck.outputs.VERSION }}
      project-tag: 'early-access'
    secrets:
      gh-access-token: ${{ secrets.GIT_ACCESS_TOKEN }}
