name: Coverage

on:
  push:
    branches: [ main ]

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'zulu'

permissions:
  contents: read
  actions: write

jobs:
  precheck:
    name: Precheck
    if: github.repository == 'jreleaser/jreleaser' && startsWith(github.event.head_commit.message, 'Releasing version') != true
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.vars.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Version
        id: vars
        shell: bash
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT

  build:
    needs: [precheck]
    if: endsWith(${{ needs.precheck.outputs.VERSION }}, '-SNAPSHOT')
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/gradle.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradlew-${{ hashFiles('**/gradlew') }}
          restore-keys: ${{ runner.os }}-gradlew-

      - name: Test
        run: |
          ./gradlew test pitest jacocoTestReport 
          ./gradlew :aggregateJacocoReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/aggregate/jacocoTestReport.xml
          flags: build
          fail_ci_if_error: false
          name: jreleaser-build
          verbose: true

      - name: Upload coverage to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: ./gradlew :coveralls